---
import { getCollection, render } from "astro:content";

import { github } from "@scripts/consts";
import BaseLayout from "@layouts/BaseLayout.astro";
import Tag from "@components/Tag.astro";
import Date from "@components/Date.astro";
import getReadingTime from "@scripts/reading-time";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;

const { title, description, date, tags } = post.data;
const readingTime = getReadingTime(post.body ?? "");
const { Content } = await render(post);

const ISODate = date.toISOString().slice(0, 10);
---

<BaseLayout {title} {description}>
  <Fragment slot="og">
    <meta property="og:type" content="article" />
    <meta property="article:author" content={github} />
    <meta property="article:published_time" content={ISODate} />
    {tags.map((tag) => <meta property="article:tag" content={tag} />)}
  </Fragment>
  <article>
    <header class="post-info">
      <h1>{title}</h1>
      <table>
        <tbody>
          <tr>
            <th scope="row">üí¨</th>
            <td>{description}</td>
          </tr>
          <tr>
            <th scope="row">üìÖ</th>
            <td><Date date={date} /></td>
          </tr>
          <tr>
            <th scope="row">‚è±Ô∏è</th>
            <td>{readingTime}</td>
          </tr>
          <tr>
            <th scope="row">üè∑Ô∏è</th>
            <td>
              {
                tags.map((tag) => (
                  <>
                    <Tag tag={tag} />
                  </>
                ))
              }
            </td>
          </tr>
        </tbody>
      </table>
    </header>
    <Content />
  </article>
</BaseLayout>
