---
import { getCollection, render } from "astro:content";

import { author } from "@scripts/consts";
import BaseLayout from "@layouts/BaseLayout.astro";
import Date from "@components/Date.astro";
import getReadingTime from "@scripts/reading-time";

import Comment from "@assets/comment.svg";
import Calendar from "@assets/calendar.svg";
import Clock from "@assets/clock.svg";
import Tags from "@assets/tags.svg";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;

const { title, description, date, tags } = post.data;
const readingTime = getReadingTime(post.body ?? "");
const { Content } = await render(post);

const ISODate = date.toISOString().slice(0, 10);
---

<BaseLayout {title} {description}>
  <Fragment slot="open-graph">
    <meta property="og:type" content="article" />
    <meta property="article:author" content={author} />
    <meta property="article:published_time" content={ISODate} />
    {tags.map((tag) => <meta property="article:tag" content={tag} />)}
  </Fragment>
  <article>
    <header>
      <h1>{title}</h1>
      <dl>
        <div>
          <dt><Comment aria-label="Description" /></dt>
          <dd>{description}</dd>
        </div>

        <div>
          <dt><Calendar aria-label="Published on" /></dt>
          <dd><Date date={date} /></dd>
        </div>

        <div>
          <dt><Clock aria-label="Reading time" /></dt>
          <dd>{readingTime}</dd>
        </div>

        {
          tags.length > 0 && (
            <div>
              <dt>
                <Tags aria-label="Tags" />
              </dt>
              <dd>
                {tags.map((tag) => (
                  <a href={encodeURI(`/tags/${tag}`)} class="chip">
                    {tag}
                  </a>
                ))}
              </dd>
            </div>
          )
        }
      </dl>
    </header>
    <Content />
  </article>
</BaseLayout>
